import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Check, Shield, LogOut, User } from "lucide-react";
import { useNavigate } from "react-router-dom";
import { PointsDisplay } from "@/components/PointsDisplay";
import { useUserAccess } from "@/hooks/useUserAccess";
import { PromoCodeBanner } from "@/components/PromoCodeBanner";
import { UsernameSetup } from "@/components/UsernameSetup";
import { useState, useEffect } from "react";
import { supabase } from "@/integrations/supabase/client";
import { toast } from "sonner";

const Welcome = () => {
  const navigate = useNavigate();
  const { isAdmin } = useUserAccess();
  const [user, setUser] = useState<any>(null);
  const [profile, setProfile] = useState<any>(null);
  const [showUsernameSetup, setShowUsernameSetup] = useState(false);
  const [isCheckingProfile, setIsCheckingProfile] = useState(true);

  useEffect(() => {
    checkUser();
    const { data: { subscription } } = supabase.auth.onAuthStateChange(() => {
      checkUser();
    });
    return () => subscription.unsubscribe();
  }, []);

  const checkUser = async () => {
    setIsCheckingProfile(true);
    const { data: { user } } = await supabase.auth.getUser();
    setUser(user);
    
    if (user) {
      const { data: profileData, error } = await supabase
        .from("profiles")
        .select("*")
        .eq("id", user.id)
        .single();
      
      if (!error && profileData) {
        setProfile(profileData);
        
        // Only show username setup if username is null, undefined, or empty
        const hasUsername = profileData.username && profileData.username.trim().length > 0;
        setShowUsernameSetup(!hasUsername);
      } else {
        setShowUsernameSetup(false);
      }
    } else {
      setShowUsernameSetup(false);
    }
    
    setIsCheckingProfile(false);
  };

  const handleLogout = async () => {
    await supabase.auth.signOut();
    setUser(null);
    setProfile(null);
    toast.success("Logged out successfully / ƒêƒÉng xu·∫•t th√†nh c√¥ng");
  };

  const tiers = [
    {
      name: { vi: "Mi·ªÖn ph√≠", en: "Free" },
      price: "$0",
      features: {
        en: ["10 random entries/day", "Achievement badges", "Learning streaks"],
        vi: ["10 m·ª•c ng·∫´u nhi√™n/ng√†y", "Huy hi·ªáu th√†nh t·ª±u", "Chu·ªói ƒëi·ªÉm th∆∞·ªüng"]
      }
    },
    {
      name: { vi: "VIP1", en: "VIP1" },
      price: "$2",
      period: { vi: "/th√°ng", en: "/month" },
      features: {
        en: ["Request 1 custom topic", "1 full room access/day", "All Free features"],
        vi: ["Y√™u c·∫ßu 1 ch·ªß ƒë·ªÅ", "Truy c·∫≠p t·ª± do 1 ph√≤ng/ng√†y", "T·∫•t c·∫£ t√≠nh nƒÉng Mi·ªÖn ph√≠"]
      },
      popular: true
    },
    {
      name: { vi: "VIP2", en: "VIP2" },
      price: "$4",
      period: { vi: "/th√°ng", en: "/month" },
      features: {
        en: ["Request 2 custom topics", "2 full rooms access/day", "All VIP1 features"],
        vi: ["Y√™u c·∫ßu 2 ch·ªß ƒë·ªÅ", "Truy c·∫≠p t·ª± do 2 ph√≤ng/ng√†y", "T·∫•t c·∫£ t√≠nh nƒÉng VIP1"]
      }
    },
    {
      name: { vi: "VIP3", en: "VIP3" },
      price: "$6",
      period: { vi: "/th√°ng", en: "/month" },
      features: {
        en: ["3 custom topics", "3 rooms access/day", "AI Matchmaking", "Voice chat", "Priority support"],
        vi: ["3 ch·ªß ƒë·ªÅ t√πy ch·ªânh", "Truy c·∫≠p 3 ph√≤ng/ng√†y", "Gh√©p ƒë√¥i AI", "Chat b·∫±ng gi·ªçng n√≥i", "H·ªó tr·ª£ ∆∞u ti√™n"]
      }
    }
  ];

  return (
    <div className="min-h-screen" style={{ background: 'hsl(var(--page-welcome))' }}>
      {!isCheckingProfile && showUsernameSetup && (
        <UsernameSetup onComplete={() => {
          setShowUsernameSetup(false);
          checkUser();
        }} />
      )}
      
      <div className="container mx-auto px-4 py-12 max-w-7xl">
        {/* Header with User Info or Sign In Button */}
        <div className="flex justify-between items-center mb-4">
          <Button 
            size="lg"
            className="bg-gradient-to-r from-accent to-primary hover:shadow-hover transition-all"
            onClick={() => navigate("/payment-test")}
          >
            <span className="flex flex-col items-center px-4">
              <span className="text-base font-semibold">üí≥ Upgrade / Subscribe</span>
              <span className="text-sm opacity-90">N√¢ng C·∫•p / ƒêƒÉng K√Ω</span>
            </span>
          </Button>
          
          {user ? (
            <div className="flex items-center gap-3">
              <div className="flex items-center gap-2 px-4 py-2 bg-primary/10 rounded-lg">
                <User className="h-4 w-4 text-primary" />
                <span className="font-medium">
                  {profile?.username || user.email?.split('@')[0]}
                </span>
              </div>
              <Button 
                variant="outline"
                onClick={handleLogout}
                size="sm"
              >
                <LogOut className="h-4 w-4 mr-2" />
                Logout / ƒêƒÉng xu·∫•t
              </Button>
            </div>
          ) : (
            <Button 
              variant="outline"
              onClick={() => navigate("/auth")}
            >
              Sign In / ƒêƒÉng Nh·∫≠p
            </Button>
          )}
        </div>

        {/* Promo Code Banner */}
        <PromoCodeBanner />

        {/* Hero Section */}
        <div className="text-center mb-16 space-y-6">
          <h1 className="text-6xl font-bold bg-gradient-to-r from-primary via-accent to-secondary bg-clip-text text-transparent">
            Mercy Blade
          </h1>
          
          {/* Points Display */}
          <div className="max-w-md mx-auto">
            <PointsDisplay />
          </div>
          
          <div className="space-y-2 max-w-3xl mx-auto">
            <p className="text-xl font-semibold text-foreground/90">
              Wellness and knowledge app for learning health, life, and English
            </p>
            <p className="text-xl font-semibold text-foreground/90">
              ·ª®ng D·ª•ng H·ªçc V·ªÅ S·ª©c Kh·ªèe, Cu·ªôc S·ªëng V√† Ti·∫øng Anh
            </p>
          </div>

          <Card className="max-w-4xl mx-auto mt-8 bg-gradient-to-br from-primary/5 via-background to-secondary/5">
            <div className="p-8 space-y-6">
              <div className="space-y-3">
                <p className="text-base leading-relaxed text-foreground/90">
                  Mercy Blade is your compassionate companion on the journey of holistic development ‚Äî from physical health, mental well-being, relationships, finances, to personal growth. The app provides concise, evidence-based, and easy-to-apply guidance to help you recover from burnout, build healthy habits, manage chronic conditions, and nurture confidence and inner peace. Whether you're looking to reduce stress, improve health, or develop yourself, Mercy Blade walks alongside you in a space full of understanding, encouragement, and non-judgment.
                </p>
                <p className="text-base leading-relaxed text-muted-foreground">
                  Mercy Blade l√† ng∆∞·ªùi b·∫°n ƒë·ªìng h√†nh ƒë·∫ßy l√≤ng tr·∫Øc ·∫©n tr√™n h√†nh tr√¨nh ph√°t tri·ªÉn to√†n di·ªán c·ªßa b·∫°n ‚Äî t·ª´ s·ª©c kh·ªèe th·ªÉ ch·∫•t, tinh th·∫ßn, m·ªëi quan h·ªá, t√†i ch√≠nh cho ƒë·∫øn s·ª± tr∆∞·ªüng th√†nh c√° nh√¢n. ·ª®ng d·ª•ng cung c·∫•p nh·ªØng h∆∞·ªõng d·∫´n ng·∫Øn g·ªçn, d·ª±a tr√™n b·∫±ng ch·ª©ng v√† d·ªÖ √°p d·ª•ng, gi√∫p b·∫°n ph·ª•c h·ªìi sau ki·ªát s·ª©c, x√¢y d·ª±ng th√≥i quen l√†nh m·∫°nh, qu·∫£n l√Ω b·ªánh m·∫°n t√≠nh, c≈©ng nh∆∞ nu√¥i d∆∞·ª°ng s·ª± t·ª± tin v√† b√¨nh an n·ªôi t√¢m. D√π b·∫°n ƒëang t√¨m c√°ch gi·∫£m cƒÉng th·∫≥ng, c·∫£i thi·ªán s·ª©c kh·ªèe hay ph√°t tri·ªÉn b·∫£n th√¢n, Mercy Blade lu√¥n ƒë·ªìng h√†nh trong m·ªôt kh√¥ng gian ƒë·∫ßy th·∫•u hi·ªÉu, kh√≠ch l·ªá v√† kh√¥ng ph√°n x√©t.
                </p>
              </div>
            </div>
          </Card>

          <div className="flex justify-center items-center gap-4 pt-8 flex-wrap">
            <Button 
              size="lg"
              className="bg-gradient-to-r from-primary to-primary-glow hover:shadow-hover transition-all min-w-[200px]"
              onClick={() => navigate("/rooms")}
            >
              <span className="flex flex-col items-center">
                <span className="text-base font-semibold">All Free Rooms</span>
                <span className="text-sm opacity-90">T·∫•t C·∫£ Ph√≤ng Mi·ªÖn Ph√≠</span>
              </span>
            </Button>
            <Button 
              size="lg"
              variant="outline"
              className="border-2 border-accent hover:bg-accent/10 min-w-[200px]"
              onClick={() => navigate("/rooms-vip1")}
            >
              <span className="flex flex-col items-center">
                <span className="text-base font-semibold">VIP1 Rooms</span>
                <span className="text-sm opacity-90">Ph√≤ng VIP1</span>
              </span>
            </Button>
            <Button 
              size="lg"
              variant="outline"
              className="border-2 border-primary hover:bg-primary/10 min-w-[200px]"
              onClick={() => navigate("/rooms-vip2")}
            >
              <span className="flex flex-col items-center">
                <span className="text-base font-semibold">VIP2 Rooms</span>
                <span className="text-sm opacity-90">Ph√≤ng VIP2</span>
              </span>
            </Button>
            <Button 
              size="lg"
              variant="outline"
              className="border-2 border-secondary hover:bg-secondary/10 min-w-[200px]"
              onClick={() => navigate("/rooms-vip3")}
            >
              <span className="flex flex-col items-center">
                <span className="text-base font-semibold">VIP3 Rooms</span>
                <span className="text-sm opacity-90">Ph√≤ng VIP3</span>
              </span>
            </Button>
          </div>
          
          {/* VIP Custom Topic Info */}
          <div className="text-center mt-8 p-4 max-w-2xl mx-auto">
            <p className="text-sm text-muted-foreground">
              üåü VIP members can request custom topics tailored to their needs
            </p>
            <p className="text-xs text-muted-foreground">
              Th√†nh vi√™n VIP c√≥ th·ªÉ y√™u c·∫ßu ch·ªß ƒë·ªÅ t√πy ch·ªânh theo nhu c·∫ßu
            </p>
          </div>
          
          {isAdmin && (
            <div className="flex justify-center mt-4">
              <button
                className="w-2 h-2 rounded-full bg-muted-foreground/20 hover:bg-destructive/50 transition-colors cursor-pointer"
                onClick={() => navigate("/admin/vip-rooms")}
                aria-label="Admin"
              />
            </div>
          )}
        </div>

        {/* Footer Info */}
        <div className="text-center mt-16 space-y-2">
          <p className="text-sm text-muted-foreground">
            Learn English vocabulary through real-world content about health, life, and personal development
          </p>
          <p className="text-xs text-muted-foreground">
            H·ªçc t·ª´ v·ª±ng ti·∫øng Anh qua n·ªôi dung th·ª±c t·∫ø v·ªÅ s·ª©c kh·ªèe, cu·ªôc s·ªëng v√† ph√°t tri·ªÉn b·∫£n th√¢n
          </p>
        </div>

        {/* Subscription Tiers */}
        <div className="space-y-8 mt-16">
          <div className="text-center space-y-2">
            <h2 className="text-3xl font-bold text-foreground">
              Choose Your Plan
            </h2>
            <p className="text-lg text-muted-foreground">
              Ch·ªçn G√≥i Ph√π H·ª£p V·ªõi B·∫°n
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {tiers.map((tier, index) => (
              <Card
                key={index}
                className={`relative p-6 transition-all hover:shadow-hover hover:scale-105 ${
                  tier.popular ? "border-2 border-primary shadow-soft" : ""
                }`}
              >
                {tier.popular && (
                  <div className="absolute -top-3 left-1/2 -translate-x-1/2 bg-gradient-to-r from-primary to-accent text-primary-foreground px-4 py-1 rounded-full text-xs font-semibold">
                    Popular / Ph·ªï Bi·∫øn
                  </div>
                )}
                
                <div className="space-y-4">
                  <div className="space-y-1">
                    <h3 className="text-xl font-bold text-foreground">
                      {tier.name.en}
                    </h3>
                    <p className="text-sm text-muted-foreground">
                      {tier.name.vi}
                    </p>
                  </div>

                  <div className="flex items-baseline gap-1">
                    <span className="text-4xl font-bold text-primary">
                      {tier.price}
                    </span>
                    {tier.period && (
                      <span className="text-muted-foreground">
                        {tier.period.vi}
                      </span>
                    )}
                  </div>

                  <div className="space-y-3 pt-4">
                    {tier.features.en.map((feature, idx) => (
                      <div key={idx} className="space-y-1">
                        <div className="flex items-start gap-2">
                          <Check className="w-5 h-5 text-primary flex-shrink-0 mt-0.5" />
                          <span className="text-sm text-foreground">{feature}</span>
                        </div>
                        <div className="pl-7 text-xs text-muted-foreground">
                          {tier.features.vi[idx]}
                        </div>
                      </div>
                    ))}
                  </div>

                  <Button
                    className={`w-full mt-6 ${
                      tier.popular
                        ? "bg-gradient-to-r from-primary to-accent"
                        : ""
                    }`}
                    variant={tier.popular ? "default" : "outline"}
                    onClick={() => navigate("/payment-test")}
                  >
                    <span className="flex flex-col">
                      <span className="text-sm">Choose Plan</span>
                      <span className="text-xs opacity-90">Ch·ªçn G√≥i</span>
                    </span>
                  </Button>
                </div>
              </Card>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Welcome;
