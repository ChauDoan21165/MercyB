import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Check, Shield, LogOut, User, ArrowRight, Volume2 } from "lucide-react";
import { useNavigate } from "react-router-dom";
import { PointsDisplay } from "@/components/PointsDisplay";
import { useUserAccess } from "@/hooks/useUserAccess";
import { PromoCodeBanner } from "@/components/PromoCodeBanner";
import { UsernameSetup } from "@/components/UsernameSetup";
import { useState, useEffect, useRef } from "react";
import { supabase } from "@/integrations/supabase/client";
import { toast } from "sonner";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";

const Welcome = () => {
  const navigate = useNavigate();
  const { isAdmin, tier, canAccessVIP1, canAccessVIP2, canAccessVIP3 } = useUserAccess();
  const [user, setUser] = useState<any>(null);
  const [profile, setProfile] = useState<any>(null);
  const [showUsernameSetup, setShowUsernameSetup] = useState(false);
  const [isCheckingProfile, setIsCheckingProfile] = useState(true);
  const [isPlaying, setIsPlaying] = useState(false);
  const audioRef = useRef<HTMLAudioElement>(null);

  useEffect(() => {
    checkUser();
    const { data: { subscription } } = supabase.auth.onAuthStateChange(() => {
      checkUser();
    });
    return () => subscription.unsubscribe();
  }, []);

  const checkUser = async () => {
    setIsCheckingProfile(true);
    const { data: { user } } = await supabase.auth.getUser();
    setUser(user);
    
    if (user) {
      const { data: profileData, error } = await supabase
        .from("profiles")
        .select("*")
        .eq("id", user.id)
        .single();
      
      if (!error && profileData) {
        setProfile(profileData);
        
        // Only show username setup if username is null, undefined, or empty
        const hasUsername = profileData.username && profileData.username.trim().length > 0;
        setShowUsernameSetup(!hasUsername);
      } else {
        setShowUsernameSetup(false);
      }
    } else {
      setShowUsernameSetup(false);
    }
    
    setIsCheckingProfile(false);
  };

  const handleLogout = async () => {
    await supabase.auth.signOut();
    setUser(null);
    setProfile(null);
    toast.success("Logged out successfully / ƒêƒÉng xu·∫•t th√†nh c√¥ng");
  };

  const tiers = [
    {
      name: { vi: "Mi·ªÖn ph√≠", en: "Free" },
      price: "$0",
      features: {
        en: ["10 random entries/day", "Achievement badges", "Learning streaks"],
        vi: ["10 m·ª•c ng·∫´u nhi√™n/ng√†y", "Huy hi·ªáu th√†nh t·ª±u", "Chu·ªói ƒëi·ªÉm th∆∞·ªüng"]
      },
      requiresAuth: true
    },
    {
      name: { vi: "VIP1", en: "VIP1" },
      price: "$2",
      period: { vi: "/th√°ng", en: "/month" },
      features: {
        en: ["Users can request one custom topic", "1 full room access/day", "ü§ñ AI Content"],
        vi: ["Ng∆∞·ªùi d√πng c√≥ th·ªÉ y√™u c·∫ßu m·ªôt ch·ªß ƒë·ªÅ t√πy ch·ªânh", "Truy c·∫≠p t·ª± do 1 ph√≤ng/ng√†y", "ü§ñ N·ªôi dung t·∫°o b·ªüi AI"]
      },
      popular: true
    },
    {
      name: { vi: "VIP2", en: "VIP2" },
      price: "$4",
      period: { vi: "/th√°ng", en: "/month" },
      features: {
        en: ["Users can request two custom topics", "2 full rooms access/day", "ü§ñ AI Content"],
        vi: ["Ng∆∞·ªùi d√πng c√≥ th·ªÉ y√™u c·∫ßu hai ch·ªß ƒë·ªÅ t√πy ch·ªânh", "Truy c·∫≠p t·ª± do 2 ph√≤ng/ng√†y", "ü§ñ N·ªôi dung t·∫°o b·ªüi AI"]
      }
    },
    {
      name: { vi: "VIP3", en: "VIP3" },
      price: "$6",
      period: { vi: "/th√°ng", en: "/month" },
      features: {
        en: ["Users can request three custom topics", "3 rooms access/day", "AI Matchmaking", "Voice chat", "ü§ñ AI Content"],
        vi: ["Ng∆∞·ªùi d√πng c√≥ th·ªÉ y√™u c·∫ßu ba ch·ªß ƒë·ªÅ t√πy ch·ªânh", "Truy c·∫≠p 3 ph√≤ng/ng√†y", "Gh√©p ƒë√¥i AI", "Chat b·∫±ng gi·ªçng n√≥i", "ü§ñ N·ªôi dung t·∫°o b·ªüi AI"]
      }
    }
  ];

  return (
    <div className="min-h-screen" style={{ background: 'hsl(var(--page-welcome))' }}>
      {!isCheckingProfile && showUsernameSetup && (
        <UsernameSetup onComplete={() => {
          setShowUsernameSetup(false);
          checkUser();
        }} />
      )}
      
      <div className="container mx-auto px-4 py-12 max-w-7xl">
        {/* Header with Home Page and User Info */}
        <div className="flex justify-between items-center mb-4">
          <Button 
            variant="outline"
            onClick={() => navigate("/intro")}
            className="border-2 border-primary/50 hover:bg-primary/10"
          >
            About / Gi·ªõi Thi·ªáu
          </Button>
          <div>
            {user ? (
              <div className="flex items-center gap-3">
              <div className="flex items-center gap-2 px-4 py-2 bg-primary/10 rounded-lg">
                <User className="h-4 w-4 text-primary" />
                <span className="font-medium">
                  {profile?.username || user.email?.split('@')[0]}
                </span>
              </div>
              <Button 
                variant="outline"
                onClick={handleLogout}
                size="sm"
              >
                <LogOut className="h-4 w-4 mr-2" />
                Logout / ƒêƒÉng xu·∫•t
              </Button>
              </div>
            ) : (
              <Button 
                variant="outline"
                onClick={() => navigate("/auth")}
              >
                Sign In / ƒêƒÉng Nh·∫≠p
              </Button>
            )}
          </div>
        </div>

        {/* Hero Section */}
        <div className="text-center mb-16 space-y-6">
          <h1 className="text-6xl font-bold bg-gradient-to-r from-primary via-accent to-secondary bg-clip-text text-transparent">
            Mercy Blade
          </h1>
          
          {/* Intro Audio Button */}
          <div className="flex justify-center">
            <Button
              size="lg"
              className="bg-primary hover:bg-primary/90 text-primary-foreground flex items-center gap-2"
              onClick={() => {
                if (audioRef.current) {
                  if (isPlaying) {
                    audioRef.current.pause();
                    setIsPlaying(false);
                  } else {
                    audioRef.current.play().catch(err => {
                      console.error('Audio playback error:', err);
                    });
                    setIsPlaying(true);
                  }
                }
              }}
            >
              <Volume2 className="w-5 h-5" /> 
              {isPlaying ? "Pause Intro Audio" : "Play Intro Audio"}
            </Button>
          </div>
          <audio 
            ref={audioRef} 
            src="/Mercy_Blade.mp3" 
            onEnded={() => setIsPlaying(false)}
            onPause={() => setIsPlaying(false)}
            onPlay={() => setIsPlaying(true)}
          />
          
          {/* Points Display */}
          <div className="max-w-md mx-auto">
            <PointsDisplay />
          </div>
          
          <div className="space-y-2 max-w-3xl mx-auto">
            <p className="text-xl font-semibold text-foreground/90">
              Overall human wellness app for health, life, and English learning
            </p>
            <p className="text-xl font-semibold text-foreground/90">
              ·ª®ng d·ª•ng v·ªÅ s·ª©c kh·ªèe t·ªïng th·ªÉ con ng∆∞·ªùi, cu·ªôc s·ªëng v√† Ti·∫øng Anh
            </p>
          </div>

          <Card className="max-w-4xl mx-auto mt-8 bg-gradient-to-br from-primary/5 via-background to-secondary/5">
            <div className="p-8 space-y-6">
              <div className="space-y-3">
                <p className="text-base leading-relaxed text-foreground/90">
                  Mercy Blade is your compassionate companion on the journey of holistic development ‚Äî from physical health, mental well-being, relationships, finances, to personal growth. The app provides concise, evidence-based, and easy-to-apply guidance to help you recover from burnout, build healthy habits, manage chronic conditions, and nurture confidence and inner peace. Whether you're looking to reduce stress, improve health, or develop yourself, Mercy Blade walks alongside you in a space full of understanding, encouragement, and non-judgment. (After some time using the app, we can help you find the most compatible learning buddy and potentially your soulmate.)
                </p>
                <p className="text-base leading-relaxed text-muted-foreground">
                  Mercy Blade l√† ng∆∞·ªùi b·∫°n ƒë·ªìng h√†nh ƒë·∫ßy l√≤ng tr·∫Øc ·∫©n tr√™n h√†nh tr√¨nh ph√°t tri·ªÉn to√†n di·ªán c·ªßa b·∫°n ‚Äî t·ª´ s·ª©c kh·ªèe th·ªÉ ch·∫•t, tinh th·∫ßn, m·ªëi quan h·ªá, t√†i ch√≠nh cho ƒë·∫øn s·ª± tr∆∞·ªüng th√†nh c√° nh√¢n. ·ª®ng d·ª•ng cung c·∫•p nh·ªØng h∆∞·ªõng d·∫´n ng·∫Øn g·ªçn, d·ª±a tr√™n b·∫±ng ch·ª©ng v√† d·ªÖ √°p d·ª•ng, gi√∫p b·∫°n ph·ª•c h·ªìi sau ki·ªát s·ª©c, x√¢y d·ª±ng th√≥i quen l√†nh m·∫°nh, qu·∫£n l√Ω b·ªánh m·∫°n t√≠nh, c≈©ng nh∆∞ nu√¥i d∆∞·ª°ng s·ª± t·ª± tin v√† b√¨nh an n·ªôi t√¢m. D√π b·∫°n ƒëang t√¨m c√°ch gi·∫£m cƒÉng th·∫≥ng, c·∫£i thi·ªán s·ª©c kh·ªèe hay ph√°t tri·ªÉn b·∫£n th√¢n, Mercy Blade lu√¥n ƒë·ªìng h√†nh trong m·ªôt kh√¥ng gian ƒë·∫ßy th·∫•u hi·ªÉu, kh√≠ch l·ªá v√† kh√¥ng ph√°n x√©t. (Sau m·ªôt th·ªùi gian s·ª≠ d·ª•ng ·ª©ng d·ª•ng, ch√∫ng t√¥i c√≥ th·ªÉ gi√∫p b·∫°n t√¨m ƒë∆∞·ª£c ng∆∞·ªùi b·∫°n h·ªçc t·∫≠p ph√π h·ª£p nh·∫•t v√† c√≥ th·ªÉ l√† tri k·ª∑ c·ªßa b·∫°n.)
                </p>
              </div>
            </div>
          </Card>

          <TooltipProvider>
            <div className="flex justify-center items-center gap-4 pt-8 flex-wrap">
              <Button 
                size="lg"
                variant="outline"
                className="border-2 border-primary hover:bg-primary/10 min-w-[200px]"
                onClick={() => navigate("/rooms")}
              >
                <span className="flex flex-col items-center">
                  <span className="text-base font-semibold">Free Rooms</span>
                  <span className="text-sm opacity-90">Ph√≤ng Mi·ªÖn Ph√≠</span>
                </span>
              </Button>
              
              <Tooltip>
                <TooltipTrigger asChild>
                  <Button 
                    size="lg"
                    variant="outline"
                    className="border-2 border-accent hover:bg-accent/10 min-w-[200px]"
                    onClick={() => canAccessVIP1 ? navigate("/rooms-vip1") : null}
                    disabled={!canAccessVIP1}
                  >
                    <span className="flex flex-col items-center">
                      <span className="text-base font-semibold">VIP1 Rooms</span>
                      <span className="text-sm opacity-90">Ph√≤ng VIP1</span>
                    </span>
                  </Button>
                </TooltipTrigger>
                {!canAccessVIP1 && (
                  <TooltipContent>
                    <p>Only for VIP1</p>
                  </TooltipContent>
                )}
              </Tooltip>

              <Tooltip>
                <TooltipTrigger asChild>
                  <Button 
                    size="lg"
                    variant="outline"
                    className="border-2 border-primary hover:bg-primary/10 min-w-[200px]"
                    onClick={() => canAccessVIP2 ? navigate("/rooms-vip2") : null}
                    disabled={!canAccessVIP2}
                  >
                    <span className="flex flex-col items-center">
                      <span className="text-base font-semibold">VIP2 Rooms</span>
                      <span className="text-sm opacity-90">Ph√≤ng VIP2</span>
                    </span>
                  </Button>
                </TooltipTrigger>
                {!canAccessVIP2 && (
                  <TooltipContent>
                    <p>Only for VIP2</p>
                  </TooltipContent>
                )}
              </Tooltip>

              <Tooltip>
                <TooltipTrigger asChild>
                  <Button 
                    size="lg"
                    variant="outline"
                    className="border-2 border-secondary hover:bg-secondary/10 min-w-[200px]"
                    onClick={() => canAccessVIP3 ? navigate("/rooms-vip3") : null}
                    disabled={!canAccessVIP3}
                  >
                    <span className="flex flex-col items-center">
                      <span className="text-base font-semibold">VIP3 Rooms</span>
                      <span className="text-sm opacity-90">Ph√≤ng VIP3</span>
                    </span>
                  </Button>
                </TooltipTrigger>
                {!canAccessVIP3 && (
                  <TooltipContent>
                    <p>Only for VIP3</p>
                  </TooltipContent>
                )}
              </Tooltip>
            </div>
          </TooltipProvider>
          
          {/* VIP Custom Topic Info */}
          <div className="text-center mt-8 p-4 max-w-2xl mx-auto">
            <p className="text-sm text-muted-foreground">
              üåü VIP members can request custom topics tailored to their needs
            </p>
            <p className="text-xs text-muted-foreground">
              Th√†nh vi√™n VIP c√≥ th·ªÉ y√™u c·∫ßu ch·ªß ƒë·ªÅ t√πy ch·ªânh theo nhu c·∫ßu
            </p>
          </div>
        </div>

        {/* Footer Info */}
        <div className="text-center mt-16 space-y-2">
          <p className="text-sm text-muted-foreground">
            Learn English vocabulary through real-world content about health, life, and personal development
          </p>
          <p className="text-xs text-muted-foreground">
            H·ªçc t·ª´ v·ª±ng ti·∫øng Anh qua n·ªôi dung th·ª±c t·∫ø v·ªÅ s·ª©c kh·ªèe, cu·ªôc s·ªëng v√† ph√°t tri·ªÉn b·∫£n th√¢n
          </p>
        </div>

        {/* Subscription Tiers */}
        <div className="space-y-8 mt-16">
          <div className="text-center space-y-2">
            <h2 className="text-3xl font-bold text-foreground">
              Choose Your Plan
            </h2>
            <p className="text-lg text-muted-foreground">
              Ch·ªçn G√≥i Ph√π H·ª£p V·ªõi B·∫°n
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {tiers.map((tier, index) => (
              <Card
                key={index}
                className="relative p-6 transition-all hover:shadow-hover hover:scale-105 flex flex-col"
              >
                <div className="space-y-4 flex flex-col flex-grow">
                  <div className="space-y-1">
                    <h3 className="text-xl font-bold text-foreground">
                      {tier.name.en}
                    </h3>
                    <p className="text-sm text-muted-foreground">
                      {tier.name.vi}
                    </p>
                  </div>

                  <div className="flex items-baseline gap-1">
                    <span className="text-4xl font-bold text-primary">
                      {tier.price}
                    </span>
                    {tier.period && (
                      <span className="text-muted-foreground">
                        {tier.period.vi}
                      </span>
                    )}
                  </div>

                  <div className="space-y-3 pt-4 flex-grow">
                    {tier.features.en.map((feature, idx) => (
                      <div key={idx} className="space-y-1">
                        <div className="flex items-start gap-2">
                          <Check className="w-5 h-5 text-primary flex-shrink-0 mt-0.5" />
                          <span className="text-sm text-foreground">{feature}</span>
                        </div>
                        <div className="pl-7 text-xs text-muted-foreground">
                          {tier.features.vi[idx]}
                        </div>
                      </div>
                    ))}
                  </div>

                  <div className="mt-auto pt-4 flex justify-center">
                    <Tooltip>
                      <TooltipTrigger asChild>
                        <Button
                          className={`w-14 h-14 rounded-full ${
                            index === 0 
                              ? "bg-gradient-to-br from-yellow-200 via-yellow-400 to-yellow-600 hover:opacity-90" 
                              : index === 1
                              ? "bg-gradient-to-br from-yellow-300 via-yellow-500 to-yellow-700 hover:opacity-90"
                              : index === 2
                              ? "bg-gradient-to-br from-yellow-400 via-yellow-600 to-yellow-800 hover:opacity-90"
                              : "bg-gradient-to-br from-yellow-500 via-yellow-700 to-yellow-900 hover:opacity-90"
                          }`}
                          size="icon"
                          disabled={tier.requiresAuth && !user}
                          onClick={() => {
                            if (index === 0) {
                              if (user) {
                                navigate("/rooms");
                              }
                            } else {
                              navigate(`/subscribe?tier=${tier.name.en.toLowerCase()}`);
                            }
                          }}
                        >
                          <ArrowRight className="w-6 h-6 text-white" />
                        </Button>
                      </TooltipTrigger>
                      {tier.requiresAuth && !user && (
                        <TooltipContent>
                          <p>Please register first / Vui l√≤ng ƒëƒÉng k√Ω tr∆∞·ªõc</p>
                        </TooltipContent>
                      )}
                    </Tooltip>
                  </div>
                </div>
              </Card>
            ))}
          </div>
        </div>

        {/* Common Disclaimer */}
        <Card className="max-w-4xl mx-auto mt-12 p-3 bg-primary/5 dark:bg-primary/10 border-primary/20">
          <div className="space-y-1.5 text-xs text-muted-foreground leading-relaxed">
            <p>
              This app provides general wellness guidance and educational content. It is NOT a substitute for professional medical, psychological, or financial advice. If you are experiencing a medical emergency or mental health crisis, please contact emergency services immediately.
            </p>
            <p>
              ·ª®ng d·ª•ng n√†y cung c·∫•p h∆∞·ªõng d·∫´n s·ª©c kh·ªèe t·ªïng th·ªÉ v√† n·ªôi dung gi√°o d·ª•c. N√≥ KH√îNG thay th·∫ø l·ªùi khuy√™n y t·∫ø, t√¢m l√Ω ho·∫∑c t√†i ch√≠nh chuy√™n nghi·ªáp. N·∫øu b·∫°n ƒëang g·∫∑p c·∫•p c·ª©u y t·∫ø ho·∫∑c kh·ªßng ho·∫£ng s·ª©c kh·ªèe t√¢m th·∫ßn, vui l√≤ng li√™n h·ªá d·ªãch v·ª• c·∫•p c·ª©u ngay l·∫≠p t·ª©c.
            </p>
          </div>
        </Card>
      </div>
    </div>
  );
};

export default Welcome;
